{
    "swagger": "2.0",
    "info": {
        "title": "Status API",
        "version": "v1.0",
        "termsOfService": "https://agrimesh.com/terms/",
        "contact": {
            "name": "Status API Support",
            "url": "https://api.agrimesh.com/support?domain=accounts&api=status",
            "email": "status.support@api.agrimesh.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/agrimesh/api-definitions/blob/main/LICENSE"
        }
    },
    "paths": {
        "/statuses": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all the status resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Get all status resources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Status"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a single status resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Create single status resource",
                "parameters": [
                    {
                        "description": "JSON body to create a status resource",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStatus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "409": {
                        "description": "Error: Conflict",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    }
                }
            }
        },
        "/statuses/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a single status resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Get single status resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the status resource",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Status"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a single status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Delete single status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the status",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JSONResultSuccess"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a single status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Update single status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the status",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body to update a status",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JSONResultSuccess"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    },
                    "500": {
                        "description": "Error: Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONResultFailure"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateStatus": {
            "type": "object",
            "required": [
                "availability",
                "message"
            ],
            "properties": {
                "availability": {
                    "type": "string",
                    "enum": [
                        "Online",
                        "Offline",
                        "Away"
                    ]
                },
                "message": {
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1,
                    "example": "Hi there! I am using AgriMesh."
                }
            }
        },
        "JSONResultFailure": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Something went wrong, please try again."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "JSONResultSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                },
                "statusCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "example": "Online"
                },
                "id": {
                    "type": "string",
                    "example": "568c28fffc4be30d44d0398e"
                },
                "message": {
                    "type": "string",
                    "example": "Hi there! I am using AgriMesh."
                }
            }
        },
        "UpdateStatus": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "enum": [
                        "Online",
                        "Offline",
                        "Away",
                        "Busy"
                    ],
                    "example": "Online"
                },
                "message": {
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1,
                    "example": "Hi there! I am using AgriMesh."
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Create and modify statuses",
            "name": "Status"
        }
    ]
}
