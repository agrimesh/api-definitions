definitions:
  CreateStatus:
    properties:
      availability:
        enum:
        - Online
        - Offline
        - Away
        type: string
      message:
        example: Hi there! I am using AgriMesh.
        maxLength: 300
        minLength: 1
        type: string
    required:
    - availability
    - message
    type: object
  JSONResultFailure:
    properties:
      errors:
        items:
          type: string
        type: array
      message:
        example: Something went wrong, please try again.
        type: string
      success:
        example: false
        type: boolean
    type: object
  JSONResultSuccess:
    properties:
      data:
        type: object
      message:
        example: Operation successful
        type: string
      success:
        type: boolean
    type: object
  Status:
    properties:
      availability:
        example: Online
        type: string
      id:
        example: 568c28fffc4be30d44d0398e
        type: string
      message:
        example: Hi there! I am using AgriMesh.
        type: string
    type: object
  UpdateStatus:
    properties:
      availability:
        enum:
        - Online
        - Offline
        - Away
        example: Online
        type: string
      message:
        example: Hi there! I am using AgriMesh.
        maxLength: 300
        minLength: 1
        type: string
    type: object
info:
  contact:
    email: status.service@agrimesh.com
    name: Status Service Support
    url: https://agrimesh.com/developers/support?s=status
  license:
    name: MIT
    url: https://github.com/agrimesh/microservices/blob/main/LICENSE
  termsOfService: https://agrimesh.com/terms/
paths:
  /statuses:
    get:
      consumes:
      - application/json
      description: Get all the status resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/JSONResultSuccess'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Status'
                  type: array
              type: object
        "401":
          description: 'Error: Unauthorized'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "422":
          description: 'Error: Unprocessable Entity'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/JSONResultFailure'
      security:
      - Bearer: []
      summary: Get all status resources
      tags:
      - Status
    post:
      consumes:
      - application/json
      description: Create a single status resource
      parameters:
      - description: JSON body to create a status resource
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateStatus'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/JSONResultSuccess'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: 'Error: Unauthorized'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "409":
          description: 'Error: Conflict'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "422":
          description: 'Error: Unprocessable Entity'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/JSONResultFailure'
      security:
      - Bearer: []
      summary: Create single status resource
      tags:
      - Status
  /statuses/{sid}:
    delete:
      consumes:
      - application/json
      description: Delete a single status
      parameters:
      - description: ID of the status
        in: path
        name: sid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResultSuccess'
        "401":
          description: 'Error: Unauthorized'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "404":
          description: 'Error: Not Found'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "422":
          description: 'Error: Unprocessable Entity'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/JSONResultFailure'
      security:
      - Bearer: []
      summary: Delete single status
      tags:
      - Status
    get:
      consumes:
      - application/json
      description: Get a single status resource
      parameters:
      - description: ID of the status resource
        in: path
        name: sid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/JSONResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/Status'
              type: object
        "401":
          description: 'Error: Unauthorized'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "404":
          description: 'Error: Not Found'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "422":
          description: 'Error: Unprocessable Entity'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/JSONResultFailure'
      security:
      - Bearer: []
      summary: Get single status resource
      tags:
      - Status
    patch:
      consumes:
      - application/json
      description: Update a single status
      parameters:
      - description: ID of the status
        in: path
        name: sid
        required: true
        type: string
      - description: JSON body to update a status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/JSONResultSuccess'
        "401":
          description: 'Error: Unauthorized'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "404":
          description: 'Error: Not Found'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "422":
          description: 'Error: Unprocessable Entity'
          schema:
            $ref: '#/definitions/JSONResultFailure'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/JSONResultFailure'
      security:
      - Bearer: []
      summary: Update single status
      tags:
      - Status
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Create and modify statuses
  name: Status
